https://books.google.com.ar/books?id=C43sj3cKlTQC&hl=es&source=gbs_book_similarbooks
http://enos.itcollege.ee/~jpoial/algorithms/GT/Data%20Structures%20and%20Algorithms%20in%20Java%20Fourth%20Edition.pdf
http://ricskopf.digitaltrip.hu/JavaSoftwareStructures3rdEdition.pdf


COSAS A TESTEAR
- probar colisiones. Para ello el hashCode() de dos keys deben dar iguales o muy similares (cosa que "int index = key.hashCode() % keys.length" den el mismo resultado). 
Al encontrar una colision debe ser capaz de encontrar la key u objeto correspondiente (y uno el que es igual o muy similar).
- put y get deberian ser, en gran parte, O(1) (o sea, que su velocidad no dependan de cuantos objetos hay en la hash table)
(LISTO) - usar la HashTable sin usar generics (o sea new HashTable() en vez de new HashTable<>())
(LISTO) - Probar que ande con y sin generics
(LISTO) - equals() y hashCode() de las dos implementaciones de hashtable y con los mismos objetos deberian dar iguales (o sea el equals debe dar true)
- Hay 3 metodos que son view collection: keySet(), values() y entrySet(). Estos 3 metodos devuelven colecciones que estan backeadas con el mapa, o sea
que cualquier impacto en el mapa (put(), putAll(), clear(), remove() y cualquier metodo que cambie la cantidad de nodos) se ver√°n inmediatamente reflejados
en las colecciones. Estas colecciones deben ser creadas con Collections.synchronizedXXX() (segun explicado en https://softwarecave.org/2014/03/19/views-in-java-collections-framework/) ya que Hashtable es synchronized. Pero hay que implementar las coleccines

https://softwarecave.org/2014/03/19/views-in-java-collections-framework/



"UTF-8"

Gastos enero
============
Consumo cash: $42.202 (NO SIGUEN 2275 + 1805 + 600 + 300 )
Consumo bbva: $8862 (NO SIGUEN $5000)
Consumo bancor: $22.198 
consumo payo pato: US$385 (NO SIGUEN 32.26 + 56.73 + 30.30 + 8.86)
consumo payo betty: US$426.25 

TOTAL = $ 73.262 (NO SIGUEN $9980) 
        US$ 811.25 (NO SIGUEN $128.15)

swiss cobranzas 011 5300 7733
nro transaccion boleta que vence en 12/02/2019: 788084902 


"C:\Work\John Demos\Repos\jewel\JewelApp\R\bin\R.exe" --vanilla --slave --file=C://Work//CanReg5//conf//import//r//CR5formatChecks.R --args -paramsFile=C://Users//Patricio//AppData//Local//Temp//rChecksParams.json